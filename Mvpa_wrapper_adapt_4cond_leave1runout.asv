%RSA for experiment  fMRI adaptation 
%calculates RSM for an ROI, contrasting MVPs of different stimuli (emoji
%vs. text) and repetition (repeated vs. non-repeated) 
%For this analysis we will not use the mixed condition

%Each RDM is calculated for

%After calculating the RDM we will run WTA-classifiers decoding repetition
%and stimulus and test their performances against chance

clear all;
ExpDir=fullfile('/sni-storage/kalanit/biac2/kgs/projects','emoji','data');
OutDir=fullfile('/sni-storage/kalanit/biac2/kgs/projects','emoji','MVPA_results','adaptation');
OutDirInd=fullfile('/sni-storage/kalanit/biac2/kgs/projects','emoji','MVPA_results','adaptation');
 
%sessions for all ROIS except for rh mOTS
sessions={'01_hk_adaptation_121620' '02_cc_adaptation_021821' '03_EK29_adaptation_030521'...
  '05_IK30_adaptation_030421' '06_KT30_adaptation_031121'...
      '07_GP21_adaptation_051221' '10_HL27_adaptation_051821'...
     '11_CS63_adaptation_051821' '12_SCW23_adaptation_060321'...
      '13_GN23_adaptation_062121' '14_MW28_adaptation_070821'...
      '15_MM21_adaptation_071921' '16_ST22_adaptation_070821'...
      '17_JL21_adaptation_072021' '18_HJ26_adapatation_073021'}  
  
% session rh mots
%   sessions={'03_EK29_adaptation_030521'...
%     '05_IK30_adaptation_030421' '06_KT30_adaptation_031121'...
%      '07_GP21_adaptation_051221' ...
%     '11_CS63_adaptation_051821' '12_SCW23_adaptation_060321'...
%       '15_MM21_adaptation_071921'...
%       '17_JL21_adaptation_072021' '18_HJ26_adapatation_073021'}
  

rois={'rh_mOTS_fLOC3_words_vs_all_disk_75mm'};
%conditions={'TxtR'; 'TxtN';'EmjR'; 'EmjN';'MixR';'MixN'};
%ohne Mix 
 conditions={'TxtR'; 'EmjR'; 'TxtN';'EmjN'};

numconds=length(conditions);


for r=1:length(rois)
    
combinedcavgmatrix=nan(numconds,numconds,length(sessions));
combinedcsymmatrix=nan(numconds,numconds,length(sessions)); 

    for s = 1:length(sessions)
        % Init Inplane
        cd(fullfile(ExpDir,sessions{s}));
        hi = initHiddenInplane(4,1,rois);
        runs=1:length(mrSESSION.functionals);
        z_values_all=[];
        z_values_other_runs=[];
  
        for n=1:length(runs)
        clear mean; 
        % Init MVPA structures
        mv=mv_init(hi,hi.ROIs(r).name,runs(n),4,[]);
        
         % run GLMs
        mv = mv_applyGlm(mv);
        % get betas for each run and voxel
        amps_all=mv_amps(mv);
        amps=amps_all(:,1:8);
        amps=[amps(:,1), amps(:,3),amps(:,2), amps(:,4)]
        
        
        % subtract means  from each voxel
        mean=mean(amps,2);
        meanmat=mean*ones(1,numconds);
        subbetas=amps-meanmat;
       % do z-transform
        z_values=z_transform(subbetas,mv.glm.residual,mv.glm.dof,numconds);
        z_values_name=sprintf('z_values_%d',runs(n)');
        eval([z_values_name '=z_values;']);
        z_values_all(:,:,n)=z_values; 
        end 
        
  % create crosscorrelation matrixes among MVPs for each subject and
        % save a figure
        corr_all=one_run_out_corr_all(OutDirInd,sessions{s},rois{r},runs,conditions,z_values_all)  
        
        clear mean;
        corr=mean(corr_all,3);
        for i=1:numconds %symmetrical correlation
            for j=1:i
                csym(i,j)=.5*(corr(i,j)+corr(j,i));
                csym(j,i)=csym(i,j);
            end
        end
        
         % run WTA classfier and save %correct for each subject
        WTA_correctC_adapt=run_WTA_classifier_correctC_adapt(runs,numconds,corr_all);
         WTA_correctSO_stim_adapt=run_WTA_classifier_stim_adapt(runs,numconds,corr_all)
     WTA_correctSO_rep_adapt=run_WTA_classifier_correctSO_rep_adapt(runs,numconds,corr_all);             
     
     % run WTA classifier and save confusion matrix for each subject
        WTA_conf_adapt=run_WTA_classifier_conf_adapt(runs,numconds,corr_all);
       
        %save the matrices with data from all the participants (separately for each ROI)
        corr_all_matrix(:,:,s) = corr;
        corr_all_filename= sprintf('adapt_corr_all_%s_z_1rout.mat',rois{r}');
        corr_all_file= fullfile(OutDir, corr_all_filename);
        save(corr_all_file, 'corr_all_matrix');
  
        combinedcsymmatrix(:,:,s) = csym;
        csymallfilename= sprintf('adapt_csym_all_%s_z_1rout.mat',rois{r}');
        csymallfile= fullfile(OutDir, csymallfilename);
        save(csymallfile, 'combinedcsymmatrix');
        
        combinedWTA_correctC_adapt(:,s) = WTA_correctC_adapt;
        WTA_correctCfilename= sprintf('adapt_WTA_correctC_%s_z_1rout.mat',rois{r}');
        WTA_correctCfile= fullfile(OutDir, WTA_correctCfilename);
        save(WTA_correctCfile, 'combinedWTA_correctC_adapt');
                           
        combinedWTA_SO_stim_adapt(:,s) = WTA_correctSO_stim_adapt;
        WTA_correctSO_stim_filename= sprintf('adapt_WTA_correctSO_stim_%s_z_1rout.mat',rois{r}');
        WTA_correctSO_stim_file= fullfile(OutDir, WTA_correctSO_stim_filename);
        save(WTA_correctSO_stim_file, 'combinedWTA_SO_stim_adapt');

        combinedWTA_SO_rep_adapt(:,s) = WTA_correctSO_rep_adapt;
        WTA_correctSO_rep_filename= sprintf('adapt_WTA_correctSO_rep_%s_z_1rout.mat',rois{r}');
        WTA_correctSO_rep_file= fullfile(OutDir, WTA_correctSO_rep_filename);
        save(WTA_correctSO_rep_file, 'combinedWTA_SO_rep_adapt');
%         
        combinedWTA_conf_adapt(:,:,s) = WTA_conf_adapt;
        WTA_conffilename= sprintf('adapt_WTA_conf_%s_z_1rout.mat',rois{r}');
        WTA_conffile= fullfile(OutDir, WTA_conffilename);
        save(WTA_conffile, 'combinedWTA_conf_adapt');
        clear hi;
    end
            
        clear mean;
    corr_mean=mean(corr_all_matrix,3);
    corr_mean_filename= sprintf('adapt_mean_cavg_%s_z_1rout.mat',rois{r}');
    corr_mean_file= fullfile(OutDir, corr_mean_filename);
    save(corr_mean_file, 'corr_mean');
     
    clear mean;
    csym_mean=mean(combinedcsymmatrix,3);
    csymallfilename= sprintf('adapt_mean_csym_%s_z_1rout.mat',rois{r}');
    csymallfile= fullfile(OutDir, csymallfilename);
    save(csymallfile, 'combinedcsymmatrix');
    
    outfilename=sprintf('adapt_mean_all_subjects_RSM_%s_z_1rout.png',rois{r}');
    plot_corr(corr_mean, csym_mean, OutDir, outfilename, conditions, 'all_subjects_', rois{r}, 1);
        
        clear mean;
    WTA_correctC_mean=mean(combinedWTA_correctC_adapt,2);
    WTA_correctC_ste=std(combinedWTA_correctC_adapt')/sqrt(length(combinedWTA_correctC_adapt'));
    WTA_correctC_filename= sprintf('adapt_mean_WTA_correctC_%s_z_1rout.mat',rois{r}');
    WTA_correctC_file= fullfile(OutDir, WTA_correctC_filename);
    save(WTA_correctC_file, 'WTA_correctC_mean');
    
     clear mean;
    WTA_SO_stim_mean=mean(combinedWTA_SO_stim_adapt,2);
    WTA_SO_stim_ste=std(combinedWTA_SO_stim_adapt')/sqrt(length(combinedWTA_SO_stim_adapt'));
    WTA_SO_stim_filename= sprintf('adapt_mean_WTA_SO_stim_%s_z_1rout.mat',rois{r}');
    WTA_SO_stim_file= fullfile(OutDir, WTA_SO_stim_filename);
    save(WTA_SO_stim_file, 'WTA_SO_stim_mean');
    
    clear mean;
    WTA_SO_rep_mean=mean(combinedWTA_SO_rep_adapt,2);
    WTA_SO_rep_ste=std(combinedWTA_SO_rep_adapt')/sqrt(length(combinedWTA_SO_rep_adapt'));
    WTA_SO_rep_filename= sprintf('adapt_mean_WTA_SO_rep_%s_z_1rout.mat',rois{r}');
    WTA_SO_rep_file= fullfile(OutDir, WTA_SO_rep_filename);
    save(WTA_SO_rep_file, 'WTA_SO_rep_mean');
    

    clear mean;
    WTA_conf_mean=mean(combinedWTA_conf_adapt,3);
    WTA_conf_filename= sprintf('adapt_mean_WTA_conf_%s_z_1rout.mat',rois{r}');
    WTA_conf_file= fullfile(OutDir, WTA_conf_filename);
    save(WTA_conf_file, 'WTA_conf_mean');
    
      figure('Visible','on','color', [ 1 1 1], 'name',[rois{r}],'units','norm', 'position', [ 0.1 .2 .6 .4]);
    subplot(1,2,1); mybar(WTA_correctC_mean',WTA_correctC_ste,conditions,[],[50/255, 166/255, 46/255; 154/255, 217/255, 137/255; 148/255, 105/255, 191/255;198/255, 180/255, 217/255  ]);
    subplot(1,2,2); imagesc(WTA_conf_mean, [0 .6]); axis('image'); cmap=mrvColorMaps('hot'); colormap(cmap); colorbar; title('WTA_conf')
    set(gca,'Xtick', [1:1:numconds], 'XtickLabel',conditions)
    set(gca,'Ytick', [1:1:numconds], 'YtickLabel',conditions)
    % save figures.
    outfilename=sprintf('adapt_all_subjects_WTA_%s_z_1rout.png',rois{r}');
    outfile=fullfile(OutDir, outfilename);
    saveas(gcf, outfile, 'fig')
    
    outfile=fullfile(OutDir, outfilename);
    saveas(gcf, outfile, 'png');
    
 
    figure('Visible','on','color', [ 1 1 1], 'name',[rois{r}],'units','norm', 'position', [ 0.1 .1 .6 .4]);
    subplot(1,2,1); mybar(WTA_SO_rep_mean',WTA_SO_rep_ste,[{'R', 'N'}],[],[255/255, 192/255, 0/255; 197/255, 90/255, 17/255]);
    ylim([0 1]);
    subplot(1,2,2); mybar(WTA_SO_stim_mean',WTA_SO_stim_ste,[{'Txt'; 'Emj'; 'Mix'}],[],[50/255, 166/255, 46/255; 15/255, 174/255, 191/255; 120/255,120/255, 120/255]);
    ylim([0 1]);
    save figures.
    outfilename=sprintf('adapt_all_subjects_WTA_SO_%s_z_1rout.png',rois{r}');
    outfile=fullfile(OutDir, outfilename);
    saveas(gcf, outfile, 'fig')
    
    outfile=fullfile(OutDir, outfilename);
    saveas(gcf, outfile, 'png');
end  
    


%test classifier performance against chance 
%repetition: 
rep_yes = combinedWTA_SO_rep_adapt(1,:)
rep_no = combinedWTA_SO_rep_adapt(2,:)
[h_rep,p_rep] = ttest(rep_yes,1/2,'Tail','right')
[h_norep,p_norep] = ttest(rep_no,1/2,'Tail','right')

%stimuli 
stim_text = combinedWTA_SO_stim_adapt(1,:)
stim_emoji = combinedWTA_SO_stim_adapt(2,:)

[h_text, p_text] = ttest(stim_text, 1/2,'Tail','right')
[h_emoji, p_emoji] = ttest(stim_emoji, 1/2,'Tail','right')

%test classifier performances against  each other 
mean_wta_rep = mean(combinedWTA_SO_rep_adapt)
mean_wta_stim = mean(combinedWTA_SO_stim_adapt)
[h_wta, p_wta] = ttest(mean_wta_rep, mean_wta_stim)


